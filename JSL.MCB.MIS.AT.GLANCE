SUBROUTINE JSL.MCB.MIS.AT.GLANCE
$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_F.ACCOUNT
$INSERT I_F.JSL.MCB.REPORT.PARAM
$INSERT I_F.EB.CONTRACT.BALANCES

GOSUB INIT
GOSUB PROCESS
RETURN

INIT:
    FN.AC='F.ACCOUNT'
	F.AC=''
	CALL OPF(FN.AC,F.AC)
	
	FN.RPP='F.JSL.MCB.REPORT.PARAM'
    F.RPP=''
    CALL OPF(FN.RPP,F.RPP)
	
	FN.ECB='F.EB.CONTRACT.BALANCES'
    F.ECB=''
    CALL OPF(FN.ECB,F.ECB)
	
	READ R.PARAM FROM F.RPP,'SYSTEM' ELSE NULL
    R.RPP=R.PARAM<JSL.MCB.PRODUCT>
    CONVERT VM TO FM IN R.RPP
    PARAM=R.PARAM<JSL.MCB.BRANCH.CODE>
    DIV.VAL=R.PARAM<JSL.MCB.DIVISION.CODE>
    CONVERT VM TO FM IN PARAM
    CONVERT VM TO FM IN DIV.VAL
    START.DTE=R.PARAM<JSL.MCB.CREDIT.START.DATE>
    END.DTE=R.PARAM<JSL.MCB.CREDIT.END.DATE>
    END.DT=TODAY ; START.DT=TODAY ; CYCLE.DATE=TODAY
    CALL CDT('',START.DT,'-30C')
    IF LEN(START.DTE) EQ 8 AND LEN(END.DTE) EQ 8 THEN
        FIRST.DATE=START.DTE
        LAST.DATE=END.DTE
    END ELSE
        FIRST.DATE=START.DT
        LAST.DATE=END.DT
    END
RETURN

PROCESS:
     AC.CMD='SELECT ':FN.AC:' WITH (CATEGORY GE "3000" AND CATEGORY LE "3999") OR (CATEGORY GE "6000" AND CATEGORY LE "6999")'
	 CALL EB.READLIST(AC.CMD,AC.LIST,'','','')
	 LOOP
	 WHILE READNEXT AC.ID FROM AC.LIST DO	 
	   READ R.AC FROM F.AC,AC.ID ELSE NULL
	   READV WBAL FROM F.ECB,AC.ID,ECB.WORKING.BALANCE ELSE NULL
	   CATEG=R.AC<AC.CATEGORY>
	   IF CATEG>='6000' AND CATEG<='6999' THEN
	   BEGIN CASE
	         CASE CATEG EQ '6110'
			      SMALL.CNT+=1
				  GOSUB COLLECTION
			 CASE CATEG EQ '6111'
			      ASSET.CNT+=1
				  GOSUB COLLECTION
			 CASE CATEG EQ '6113'
			      INDIV+=1
				  GOSUB COLLECTION
			 CASE CATEG EQ '6115'
			      SPRING.CNT+=1
				  GOSUB COLLECTION
			 CASE CATEG EQ '6116'
			      IFDC.CNT+=1
				  GOSUB COLLECTION
	   END CASE
	   END ELSE
	   BEGIN CASE
	        CASE CATEG EQ '3110'
			     SMALLLN.CNT+=1
				 GOSUB LOAN.DISB
				 SMALLPR+=PR.AMT
				 SMALLCH+=CH.AMT
				 GOSUB OUTS.BAL	
				 SMALLLN.OVD+=OVD
				 SMALLLN.DEFBAL+=TOTBAL.DEF
				 SMALLLN.OUTS+=TOTOUTS.BAL
				 SMALLLN.DEFAMT+=TOTDUE
			CASE CATEG EQ '3111'
			     ASSETLN.CNT+=1
				 GOSUB LOAN.DISB
				 ASSETPR+=PR.AMT
				 ASSETCH+=CH.AMT
				 GOSUB OUTS.BAL	
				 ASSETLN.OVD+=OVD
				 ASSETLN.DEFBAL+=TOTBAL.DEF
				 ASSETLN.OUTS+=TOTOUTS.BAL
				 ASSETLN.DEFAMT+=TOTDUE
			CASE CATEG EQ '3112'
			     FESTLN+=1
				 GOSUB LOAN.DISB
				 FESTPR+=PR.AMT
				 FESTCH+=CH.AMT
				 GOSUB OUTS.BAL	
				 FESTLN.OVD+=OVD
				 FESTLN.DEFBAL+=TOTBAL.DEF
				 FESTLN.OUTS+=TOTOUTS.BAL
				 FESTLN.DEFAMT+=TOTDUE
			CASE CATEG EQ '3113'
			     INDIVLN+=1
				 GOSUB LOAN.DISB
				 INDIVPR+=PR.AMT
				 INDIVCH+=CH.AMT
				 GOSUB OUTS.BAL	
				 INDIVLN.OVD+=OVD
				 INDIVLN.DEFBAL+=TOTBAL.DEF
				 INDIVLN.OUTS+=TOTOUTS.BAL
				 INDIVLN.DEFAMT+=TOTDUE
			CASE CATEG EQ '3114'
			     INDIVHQLN+=1
				 GOSUB LOAN.DISB
				 INDIVHQPR+=PR.AMT
				 INDIVHQCH+=CH.AMT
				 GOSUB OUTS.BAL	
				 INDIVHQLN.OVD+=OVD
				 INDIVHQLN.DEFBAL+=TOTBAL.DEF
				 INDIVHQLN.OUTS+=TOTOUTS.BAL
				 INDIVHQLN.DEFAMT+=TOTDUE
			CASE CATEG EQ '3115'
			     SPRINGLN.CNT+=1
				 GOSUB LOAN.DISB
				 SPRINGPR+=PR.AMT
				 SPRINGCH+=CH.AMT
				 GOSUB OUTS.BAL	
				 SPRINGLN.OVD+=OVD
				 SPRINGLN.DEFBAL+=TOTBAL.DEF
				 SPRINGLN.OUTS+=TOTOUTS.BAL
				 SPRINGLN.DEFAMT+=TOTDUE
			CASE CATEG EQ '3116'
			     IFDCLN.CNT+=1
				 GOSUB LOAN.DISB
				 IFDCPR+=PR.AMT
				 IFDCCH+=CH.AMT
				 GOSUB OUTS.BAL	
				 IFDCLN.OVD+=OVD
				 IFDCLN.DEFBAL+=TOTBAL.DEF
				 IFDCLN.OUTS+=TOTOUTS.BAL
				 IFDCLN.DEFAMT+=TOTDUE
			CASE CATEG EQ '3117'
			     *OGASLN.CNT+=1
				 *GOSUB LOAN.DISB
				 *OGASPR+=PR.AMT
				 *OGASCH+=CH.AMT
				 GOSUB OUTS.BAL	
				 *OGASLN.OVD+=OVD
				 *OGASLN.DEFBAL+=TOTBAL.DEF
				 OGASLN.OUTS+=TOTOUTS.BAL
				 *OGASLN.DEFAMT+=TOTDUE
			CASE CATEG EQ '3118'
			     SMELN+=1
				 GOSUB LOAN.DISB
				 SMEPR+=PR.AMT
				 SMECH+=CH.AMT
				 GOSUB OUTS.BAL	
				 SMELN.OVD+=OVD
				 SMELN.DEFBAL+=TOTBAL.DEF
				 SMELN.OUTS+=TOTOUTS.BAL
				 SMELN.DEFAMT+=TOTDUE
			CASE CATEG EQ '3120' OR CATEG EQ '3121' OR CATEG EQ '3122'
			     STAFFLN+=1 ;*Number of loans for this product
				 GOSUB LOAN.DISB
				 STAFFPR+=PR.AMT ;* Disbursed PR amount in the reporting period
				 STAFFCH+=CH.AMT ;* Disbursed CH amount in the reporting period
				 GOSUB OUTS.BAL	
				 STAFFLN.OVD+=OVD ;*Number of contract in arrears
				 STAFFLN.DEFBAL+=TOTBAL.DEF ;* Balance of defaulter
				 STAFFLN.OUTS+=TOTOUTS.BAL ;* Total outs bal
				 STAFFLN.DEFAMT+=TOTDUE ;* Total Due for this product (PR+CH) as @ reporting time
	   END CASE
	   END
	   TOTDUE='' ; TOTOUTS.BAL='' ; OVD='' ; CH.AMT='' ; PR.AMT='' ; TOTBAL.DEF=''
	 REPEAT
	     OPENSEQ 'REPORT.IN','MIS.AT.GLANCE.REPORT.html' TO F.PATH ELSE
        CREATE F.PATH ELSE
            CRT 'CANNOT CREATE PATH'
        END
    END

    READV PROD.DESC FROM F.AP,R.RPP<1>,AA.PDT.DESCRIPTION ELSE NULL
    HDR='<html>'
    HDR:='<head></head>'
    HDR:='<body>'
    HDR:='<h1>MIS AT A GLANCE Report As At ':FMT(ICONV(TODAY,"D"),"D4"):'</h1>'
    HDR:='<h1>':PROD.DESC:' Summary</h1>'
    HDR:='<table border="1">'
RETURN

COLLECTION:
    ACCT.DATES=''
    CALL GET.ACTIVITY.DATES(AC.ID, ACCT.DATES)
    DTE.CNT=DCOUNT(ACCT.DATES,FM)
    FOR L=1 TO DTE.CNT
        DATE.REC=ACCT.DATES<L>
        BALANCE.TYPE='TRADE' ; ACTIVITY.REC='' ; ACCT.REC=''
        CALL EB.GET.ACCT.ACTIVITY(AC.ID, ACCT.REC, DATE.REC, BALANCE.TYPE, SYSTEM.DATE, ACTIVITY.REC)
        DAY.CNT=DCOUNT(ACTIVITY.REC<IC.ACT.DAY.NO>,VM)
        FOR G=1 TO DAY.CNT
            FULL.DATE=DATE.REC: ACTIVITY.REC<1,G>
            IF FULL.DATE >=FIRST.DATE AND FULL.DATE<=LAST.DATE THEN
                TXN.CODES=ACTIVITY.REC<IC.ACT.TRANSACT.CODE>
                F.VAL='' ; V.VAL='' ; S.VAL=''
                FIND '258' IN TXN.CODES,G SETTING F.VAL,V.VAL,S.VAL THEN
                    CR.AMT+=ABS(ACTIVITY.REC<IC.ACT.TRANSACT.AMT,V.VAL>)
                END
                F.VAL='' ; V.VAL='' ; S.VAL=''
            END

        NEXT G
    NEXT L
    AC.BAL+=WBAL
    WBAL=''
    RETURN
LOAN.DISB:
        IF R.AC<AC.OPENING.DATE> >= FIRST.DATE AND R.AC<AC.OPENING.DATE> <= LAST.DATE THEN	
            		
		    SIM.REF='' ; TOT.PAYMENT='' ; DUE.DATES='' ; DUE.TYPES='' ; DUE.METHODS='' ; DUE.TYPE.AMTS='' ; DUE.PROPS='' DUE.PROP.AMTS='' ; DUE.OUTS='' ; PROPS.CNT='' ; PR.AMT='' ; CH.AMT=''
            CALL AA.SCHEDULE.PROJECTOR(R.AC<AC.ARRANGEMENT.ID>, SIM.REF, "","", TOT.PAYMENT, DUE.DATES, DUE.TYPES, DUE.METHODS, DUE.TYPE.AMTS, DUE.PROPS, DUE.PROP.AMTS, DUE.OUTS)          ;* Routine to Project complete schedules
            PROPS.CNT=DCOUNT(DUE.PROPS,FM)           
            CONVERT SM TO FM IN DUE.PROPS
            CONVERT VM TO FM IN DUE.PROPS
            CONVERT SM TO FM IN DUE.PROP.AMTS
            CONVERT VM TO FM IN DUE.PROP.AMTS
            FOR FF=1 TO PROPS.CNT
                FIND 'SERVICECHARGE' IN DUE.PROPS,FF SETTING LL.POS THEN
                    CH.AMT+=ABS(DUE.PROP.AMTS<LL.POS>)
                END
                FIND 'ACCOUNT' IN DUE.PROPS,FF SETTING KK.POS THEN
                    PR.AMT+=ABS(DUE.PROP.AMTS<KK.POS>)
                END
            NEXT FF		
            GOSUB OUTS.BAL		
		END ELSE
		    REST.LN+=1 ;* rest of the loans
		END
RETURN
OUTS.BAL:
            SIM.REF='' ; TOT.PAYMENT='' ; DUE.DATES='' ; DUE.TYPES='' ; DUE.METHODS='' ; DUE.TYPE.AMTS='' ; DUE.PROPS='' DUE.PROP.AMTS='' ; DUE.OUTS='' ; PROPS.CNT='' ; PR.AMT='' ; CH.AMT=''
			OVD='' ; TOTDUE='' ; TOTOUTS.BAL='' ; OVD='' ; TOTBAL.DEF=''
            CALL AA.SCHEDULE.PROJECTOR(R.AC<AC.ARRANGEMENT.ID>, SIM.REF, "",CYCLE.DATE, TOT.PAYMENT, DUE.DATES, DUE.TYPES, DUE.METHODS, DUE.TYPE.AMTS, DUE.PROPS, DUE.PROP.AMTS, DUE.OUTS)          ;* Routine to Project complete schedules
            PROPS.CNT=DCOUNT(DUE.PROPS,FM)           
            CONVERT SM TO FM IN DUE.PROPS
            CONVERT VM TO FM IN DUE.PROPS
            CONVERT SM TO FM IN DUE.PROP.AMTS
            CONVERT VM TO FM IN DUE.PROP.AMTS
            FOR Q=1 TO PROPS.CNT
                FIND 'SERVICECHARGE' IN DUE.PROPS,Q SETTING LL.POS THEN
                    CHG.AMT+=ABS(DUE.PROP.AMTS<LL.POS>)
                END
            NEXT Q
            CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALOVERDUEPR',TODAY,DUEPR,ERR.1)
            CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALOVERDUECH',TODAY,DUECH,ERR.2)
            CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'CURACCOUNT',TODAY,CURPR,ERR.3)
            CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'DUEACCOUNT',TODAY,DUECURPR,ERR.4)
            CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'DUESERVICECHARGE',TODAY,DUECURCH,ERR.5)
            TOTDUE=ABS(DUEPR)+ABS(DUECH)
            IF TOTDUE>0 THEN
                OVD=1
                PRBAL.DEF=ABS(CURPR)+ ABS(DUEPR)
                CHBAL.DEF=ABS(DUECH) + ABS(CHG.AMT)
                PRDUE.BAL=ABS(DUEPR)
                CHDUE.BAL=ABS(DUECH)
                TOTBAL.DEF=TOTDUE + ABS(CURPR) + ABS(CHG.AMT) + ABS(DUECURPR) + ABS(DUECURCH)
            END
            TOTOUTS.BAL=TOTDUE + ABS(CURPR) + ABS(CHG.AMT)+ ABS(DUECURPR) + ABS(DUECURCH)
            *PROUTS.BAL=ABS(CURPR) + ABS(DUEPR) + ABS(DUECURPR)
            *CHOUTS.BAL=ABS(DUECH) + ABS(CHO.AMT)+ ABS(DUECURCH)
            CURPR='' ; DUEPR='' ; CHG.AMT='' ; DUECH='' ; ERR.1='' ; ERR.2='' ; ERR.3='' ; ERR.4='' ; ERR.5=''
            DUECURCH='' ; DUECURPR=''
RETURN
END